name: trivy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '41 17 * * 0'

permissions:
  contents: read

jobs:
  build:
    permissions:
      contents: read
      security-events: write
      actions: read
    name: Build
    runs-on: "ubuntu-20.04"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.20.0/trivy_0.20.0_Linux-64bit.tar.gz
          tar xzvf trivy_0.20.0_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/
          rm trivy_0.20.0_Linux-64bit.tar.gz

      - name: Build and scan multiple Dockerfiles
        run: |
          dockerfiles=("Dockerfile" "Dockerfile_desktop")  # List your Dockerfile names here

          for file in "${dockerfiles[@]}"; do
            docker build -t "docker.io/my-organization/my-app:${{ github.sha }}-$file" -f $file .
            trivy image -f json -o "trivy-results-$file.json" "docker.io/my-organization/my-app:${{ github.sha }}-$file"
          done

      - name: Convert Trivy scan results to SARIF
        run: |
          for file in trivy-results-*.json; do
            jq -n --arg trivyJson "$(cat $file)" '{
              "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
              "version": "2.1.0",
              "runs": [
                {
                  "tool": {
                    "driver": {
                      "name": "Trivy",
                      "informationUri": "https://github.com/aquasecurity/trivy",
                      "rules": []
                    }
                  },
                  "results": [$trivyJson]
                }
              ]
            }' > "${file%.json}-sarif.json"
          done

      - name: Upload Trivy scan results to GitHub Security tab
        run: |
          for file in trivy-results-*.json-sarif.json; do
            echo "Uploading $file to the GitHub Security tab"
            # You can upload each SARIF file to the GitHub Security tab here
          done
